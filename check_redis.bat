@echo off
REM ARQV30 Enhanced v2.0 - Verificador de Redis

echo ========================================
echo ARQV30 Enhanced v2.0 - Verifica√ß√£o Redis
echo ========================================
echo.

REM Ativa ambiente virtual se existir
if exist "venv\Scripts\activate.bat" (
    call venv\Scripts\activate.bat
)

echo üîç Verificando Redis...
echo.

REM Testa conex√£o com Redis
python -c "
import redis
import sys

try:
    r = redis.Redis(host='localhost', port=6379, db=0)
    r.ping()
    print('‚úÖ Redis est√° rodando e acess√≠vel!')
    print(f'üìä Vers√£o: {r.info().get(\"redis_version\", \"N/A\")}')
    print(f'üíæ Mem√≥ria usada: {r.info().get(\"used_memory_human\", \"N/A\")}')
    print(f'üîó Conex√µes: {r.info().get(\"connected_clients\", \"N/A\")}')
    sys.exit(0)
except redis.ConnectionError:
    print('‚ùå Redis n√£o est√° rodando!')
    print('')
    print('Para instalar Redis no Windows:')
    print('1. Baixe Redis para Windows')
    print('2. Extraia e execute redis-server.exe')
    print('3. Execute este script novamente')
    print('')
    print('Ou use Docker:')
    print('docker run -d -p 6379:6379 redis:alpine')
    sys.exit(1)
except ImportError:
    print('‚ùå Biblioteca redis n√£o instalada!')
    print('Execute: pip install redis')
    sys.exit(1)
except Exception as e:
    print(f'‚ùå Erro inesperado: {e}')
    sys.exit(1)
"

if errorlevel 1 (
    echo.
    echo ‚ö†Ô∏è Redis n√£o est√° dispon√≠vel.
    echo A aplica√ß√£o funcionar√° em modo s√≠ncrono apenas.
) else (
    echo.
    echo ‚úÖ Redis est√° funcionando perfeitamente!
    echo Funcionalidades ass√≠ncronas dispon√≠veis.
)

echo.
pause